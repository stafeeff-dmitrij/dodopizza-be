services:

  db:
    image: postgres:latest
    environment:
      POSTGRES_INITDB_ARGS: --locale=en_US.UTF8
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:latest
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: --port 6379

  api:
    build:
      context: .
    env_file: .env
    command: [ "/docker/api.sh" ]
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./fixtures:/fixtures
      - static:/src/static

  frontend:
    build:
      context: https://github.com/stafeeff-dmitrij/dodopizza-fe.git
      dockerfile: Dockerfile
    volumes:
      - frontend:/app/dist
    depends_on:
      - api

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/:/etc/nginx/templates/
      - static:/static
      - frontend:/usr/share/nginx/html
    depends_on:
      - api
      - frontend

volumes:
  postgres_data:
  static:
  frontend:
